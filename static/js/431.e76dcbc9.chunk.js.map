{"version":3,"file":"static/js/431.e76dcbc9.chunk.js","mappings":"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","sources":["components/Skills.js","utils/firestoreUtils.js"],"sourcesContent":["// src/components/Skills.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport Slider from \"react-slick\";\r\nimport { fetchDocuments } from '../utils/firestoreUtils';\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nconst Skills = () => {\r\n  const [skills, setSkills] = useState({\r\n    programming: [],\r\n    software: [],\r\n    language: [],\r\n    others: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        console.log('Fetching skills data...');\r\n        const data = await fetchDocuments('programming');\r\n        console.log('Data fetched:', data);\r\n\r\n        const programming = [];\r\n        const software = [];\r\n        const language = [];\r\n        const others = [];\r\n\r\n        data.forEach((item) => {\r\n          if (item.category === 'programming') {\r\n            programming.push(item.skill);\r\n          } else if (item.category === 'software') {\r\n            software.push(item.skill);\r\n          } else if (item.category === 'language') {\r\n            language.push(item.skill);\r\n          } else if (item.category === 'others') {\r\n            others.push(item.skill);\r\n          }\r\n        });\r\n\r\n        setSkills({ programming, software, language, others });\r\n      } catch (error) {\r\n        console.error('Error fetching skills data:', error);\r\n      }\r\n    };\r\n\r\n    getData();\r\n  }, []);\r\n\r\n  const settings = (itemsCount) => ({\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: itemsCount >= 5 ? 5 : itemsCount,\r\n    slidesToScroll: 1,\r\n    centerMode: itemsCount < 5,\r\n    centerPadding: itemsCount < 5 ? \"20px\" : \"0\",\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: itemsCount >= 3 ? 3 : itemsCount,\r\n          slidesToScroll: 1,\r\n          infinite: true,\r\n          dots: true,\r\n          centerMode: itemsCount < 3,\r\n          centerPadding: itemsCount < 3 ? \"20px\" : \"0\",\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1,\r\n          centerMode: true,\r\n          centerPadding: \"0\",\r\n        }\r\n      }\r\n    ]\r\n  });\r\n\r\n  const renderSkills = (skillsArray) => (\r\n    skillsArray.map((skill, index) => (\r\n      <div key={index} className=\"p-4\">\r\n        <div className=\"bg-white rounded-lg shadow-md p-6 text-center mx-auto\" style={{ maxWidth: '200px', height: '150px' }}>\r\n          <p className=\"text-lg font-semibold\">{skill.split(' ')[0]}</p>\r\n          <p className=\"text-sm text-gray-600\">{skill.split(' ').slice(1).join(' ')}</p>\r\n        </div>\r\n      </div>\r\n    ))\r\n  );\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-6\">\r\n      <h2 className=\"text-3xl font-bold mb-6 text-center\">Skills</h2>\r\n\r\n      <div className=\"mb-8\">\r\n        <h3 className=\"text-2xl font-semibold mb-4 text-center\">Programming</h3>\r\n        {skills.programming.length > 0 ? (\r\n          <Slider {...settings(skills.programming.length)}>\r\n            {renderSkills(skills.programming)}\r\n          </Slider>\r\n        ) : (\r\n          <p className=\"text-lg text-center\">Loading...</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"mb-8\">\r\n        <h3 className=\"text-2xl font-semibold mb-4 text-center\">Software and Tools Mastery</h3>\r\n        {skills.software.length > 0 ? (\r\n          <Slider {...settings(skills.software.length)}>\r\n            {renderSkills(skills.software)}\r\n          </Slider>\r\n        ) : (\r\n          <p className=\"text-lg text-center\">Loading...</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"mb-8\">\r\n        <h3 className=\"text-2xl font-semibold mb-4 text-center\">Spoken Language</h3>\r\n        {skills.language.length > 0 ? (\r\n          <Slider {...settings(skills.language.length)}>\r\n            {renderSkills(skills.language)}\r\n          </Slider>\r\n        ) : (\r\n          <p className=\"text-lg text-center\">Loading...</p>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <h3 className=\"text-2xl font-semibold mb-4 text-center\">Others</h3>\r\n        {skills.others.length > 0 ? (\r\n          <Slider {...settings(skills.others.length)}>\r\n            {renderSkills(skills.others)}\r\n          </Slider>\r\n        ) : (\r\n          <p className=\"text-lg text-center\">Loading...</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","// src/utils/firestoreUtils.js\r\nimport { db } from '../firebaseConfig';\r\nimport { collection, addDoc, updateDoc, deleteDoc, getDocs, doc } from 'firebase/firestore';\r\n\r\n/**\r\n * Add a document to a Firestore collection\r\n * @param {string} collectionName - The name of the collection\r\n * @param {Object} data - The data to add\r\n * @returns {Promise<void>}\r\n */\r\nexport const addDocument = async (collectionName, data) => {\r\n  try {\r\n    const timestamp = new Date().toISOString();\r\n    await addDoc(collection(db, collectionName), {\r\n      ...data,\r\n      created_at: timestamp,\r\n      updated_at: timestamp\r\n    });\r\n  } catch (error) {\r\n    console.error(`Error adding document to ${collectionName}:`, error);\r\n  }\r\n};\r\n\r\n/**\r\n * Update a document in a Firestore collection\r\n * @param {string} collectionName - The name of the collection\r\n * @param {string} id - The ID of the document to update\r\n * @param {Object} data - The data to update\r\n * @returns {Promise<void>}\r\n */\r\nexport const updateDocument = async (collectionName, id, data) => {\r\n  try {\r\n    const timestamp = new Date().toISOString();\r\n    const docRef = doc(db, collectionName, id);\r\n    await updateDoc(docRef, {\r\n      ...data,\r\n      updated_at: timestamp\r\n    });\r\n  } catch (error) {\r\n    console.error(`Error updating document in ${collectionName}:`, error);\r\n  }\r\n};\r\n\r\n/**\r\n * Delete a document from a Firestore collection\r\n * @param {string} collectionName - The name of the collection\r\n * @param {string} id - The ID of the document to delete\r\n * @returns {Promise<void>}\r\n */\r\nexport const deleteDocument = async (collectionName, id) => {\r\n  try {\r\n    const docRef = doc(db, collectionName, id);\r\n    await deleteDoc(docRef);\r\n  } catch (error) {\r\n    console.error(`Error deleting document from ${collectionName}:`, error);\r\n  }\r\n};\r\n\r\n/**\r\n * Fetch all documents from a Firestore collection\r\n * @param {string} collectionName - The name of the collection\r\n * @returns {Promise<Array>}\r\n */\r\nexport const fetchDocuments = async (collectionName) => {\r\n  try {\r\n    const querySnapshot = await getDocs(collection(db, collectionName));\r\n    return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  } catch (error) {\r\n    console.error(`Error fetching documents from ${collectionName}:`, error);\r\n    return [];\r\n  }\r\n};\r\n"],"names":["Skills","skills","setSkills","useState","programming","software","language","others","useEffect","async","console","log","data","fetchDocuments","forEach","item","category","push","skill","error","getData","settings","itemsCount","dots","infinite","speed","slidesToShow","slidesToScroll","centerMode","centerPadding","responsive","breakpoint","renderSkills","skillsArray","map","index","_jsx","className","children","_jsxs","style","maxWidth","height","split","slice","join","length","Slider","addDocument","collectionName","timestamp","Date","toISOString","addDoc","collection","db","created_at","updated_at","concat","updateDocument","id","docRef","doc","updateDoc","deleteDocument","deleteDoc","getDocs","docs"],"sourceRoot":""}